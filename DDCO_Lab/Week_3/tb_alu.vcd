$date
	Thu Sep 23 19:08:50 2021
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 16 ! o [15:0] $end
$var wire 1 " cout $end
$var reg 1 # clk $end
$var reg 16 $ i0 [15:0] $end
$var reg 16 % i1 [15:0] $end
$var reg 2 & op [1:0] $end
$var reg 1 ' reset $end
$var integer 32 ( i [31:0] $end
$scope module alu_0 $end
$var wire 16 ) i0 [15:0] $end
$var wire 16 * i1 [15:0] $end
$var wire 2 + op [1:0] $end
$var wire 16 , o [15:0] $end
$var wire 1 " cout $end
$var wire 15 - c [0:14] $end
$scope module a0 $end
$var wire 1 . cin $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 2 1 op [1:0] $end
$var wire 1 2 t2 $end
$var wire 1 3 t1 $end
$var wire 1 4 t0 $end
$var wire 1 5 sd $end
$var wire 1 6 o $end
$var wire 1 7 cout $end
$scope module addsub_0 $end
$var wire 1 8 asb $end
$var wire 1 . cin $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 1 9 t $end
$var wire 1 5 sd $end
$var wire 1 7 cout $end
$scope module fa_0 $end
$var wire 1 . cin $end
$var wire 1 / i0 $end
$var wire 1 : t2 $end
$var wire 1 ; t1 $end
$var wire 1 < t0 $end
$var wire 1 5 sum $end
$var wire 1 9 i1 $end
$var wire 1 7 cout $end
$scope module and2_0 $end
$var wire 1 / i0 $end
$var wire 1 < o $end
$var wire 1 9 i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 . i1 $end
$var wire 1 ; o $end
$var wire 1 9 i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 . i0 $end
$var wire 1 : o $end
$var wire 1 9 i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 < i0 $end
$var wire 1 ; i1 $end
$var wire 1 : i2 $end
$var wire 1 = t $end
$var wire 1 7 o $end
$scope module or2_0 $end
$var wire 1 < i0 $end
$var wire 1 ; i1 $end
$var wire 1 = o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 : i0 $end
$var wire 1 = i1 $end
$var wire 1 7 o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 / i0 $end
$var wire 1 . i2 $end
$var wire 1 > t $end
$var wire 1 5 o $end
$var wire 1 9 i1 $end
$scope module xor2_0 $end
$var wire 1 / i0 $end
$var wire 1 > o $end
$var wire 1 9 i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 . i0 $end
$var wire 1 > i1 $end
$var wire 1 5 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 0 i0 $end
$var wire 1 8 i1 $end
$var wire 1 9 o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 0 i0 $end
$var wire 1 / i1 $end
$var wire 1 4 o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 4 i0 $end
$var wire 1 ? j $end
$var wire 1 2 o $end
$var wire 1 3 i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 2 i0 $end
$var wire 1 5 i1 $end
$var wire 1 @ j $end
$var wire 1 6 o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 / i0 $end
$var wire 1 0 i1 $end
$var wire 1 3 o $end
$upscope $end
$upscope $end
$scope module a1 $end
$var wire 1 A cin $end
$var wire 1 B i0 $end
$var wire 1 C i1 $end
$var wire 2 D op [1:0] $end
$var wire 1 E t2 $end
$var wire 1 F t1 $end
$var wire 1 G t0 $end
$var wire 1 H sd $end
$var wire 1 I o $end
$var wire 1 J cout $end
$scope module addsub_0 $end
$var wire 1 K asb $end
$var wire 1 A cin $end
$var wire 1 B i0 $end
$var wire 1 C i1 $end
$var wire 1 L t $end
$var wire 1 H sd $end
$var wire 1 J cout $end
$scope module fa_0 $end
$var wire 1 A cin $end
$var wire 1 B i0 $end
$var wire 1 M t2 $end
$var wire 1 N t1 $end
$var wire 1 O t0 $end
$var wire 1 H sum $end
$var wire 1 L i1 $end
$var wire 1 J cout $end
$scope module and2_0 $end
$var wire 1 B i0 $end
$var wire 1 O o $end
$var wire 1 L i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 A i1 $end
$var wire 1 N o $end
$var wire 1 L i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 A i0 $end
$var wire 1 M o $end
$var wire 1 L i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 O i0 $end
$var wire 1 N i1 $end
$var wire 1 M i2 $end
$var wire 1 P t $end
$var wire 1 J o $end
$scope module or2_0 $end
$var wire 1 O i0 $end
$var wire 1 N i1 $end
$var wire 1 P o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 M i0 $end
$var wire 1 P i1 $end
$var wire 1 J o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 B i0 $end
$var wire 1 A i2 $end
$var wire 1 Q t $end
$var wire 1 H o $end
$var wire 1 L i1 $end
$scope module xor2_0 $end
$var wire 1 B i0 $end
$var wire 1 Q o $end
$var wire 1 L i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 A i0 $end
$var wire 1 Q i1 $end
$var wire 1 H o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 C i0 $end
$var wire 1 K i1 $end
$var wire 1 L o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 C i0 $end
$var wire 1 B i1 $end
$var wire 1 G o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 G i0 $end
$var wire 1 R j $end
$var wire 1 E o $end
$var wire 1 F i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 E i0 $end
$var wire 1 H i1 $end
$var wire 1 S j $end
$var wire 1 I o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 B i0 $end
$var wire 1 C i1 $end
$var wire 1 F o $end
$upscope $end
$upscope $end
$scope module a10 $end
$var wire 1 T cin $end
$var wire 1 U i0 $end
$var wire 1 V i1 $end
$var wire 2 W op [1:0] $end
$var wire 1 X t2 $end
$var wire 1 Y t1 $end
$var wire 1 Z t0 $end
$var wire 1 [ sd $end
$var wire 1 \ o $end
$var wire 1 ] cout $end
$scope module addsub_0 $end
$var wire 1 ^ asb $end
$var wire 1 T cin $end
$var wire 1 U i0 $end
$var wire 1 V i1 $end
$var wire 1 _ t $end
$var wire 1 [ sd $end
$var wire 1 ] cout $end
$scope module fa_0 $end
$var wire 1 T cin $end
$var wire 1 U i0 $end
$var wire 1 ` t2 $end
$var wire 1 a t1 $end
$var wire 1 b t0 $end
$var wire 1 [ sum $end
$var wire 1 _ i1 $end
$var wire 1 ] cout $end
$scope module and2_0 $end
$var wire 1 U i0 $end
$var wire 1 b o $end
$var wire 1 _ i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 T i1 $end
$var wire 1 a o $end
$var wire 1 _ i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 T i0 $end
$var wire 1 ` o $end
$var wire 1 _ i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 b i0 $end
$var wire 1 a i1 $end
$var wire 1 ` i2 $end
$var wire 1 c t $end
$var wire 1 ] o $end
$scope module or2_0 $end
$var wire 1 b i0 $end
$var wire 1 a i1 $end
$var wire 1 c o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 ` i0 $end
$var wire 1 c i1 $end
$var wire 1 ] o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 U i0 $end
$var wire 1 T i2 $end
$var wire 1 d t $end
$var wire 1 [ o $end
$var wire 1 _ i1 $end
$scope module xor2_0 $end
$var wire 1 U i0 $end
$var wire 1 d o $end
$var wire 1 _ i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 T i0 $end
$var wire 1 d i1 $end
$var wire 1 [ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 V i0 $end
$var wire 1 ^ i1 $end
$var wire 1 _ o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 V i0 $end
$var wire 1 U i1 $end
$var wire 1 Z o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 Z i0 $end
$var wire 1 e j $end
$var wire 1 X o $end
$var wire 1 Y i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 X i0 $end
$var wire 1 [ i1 $end
$var wire 1 f j $end
$var wire 1 \ o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 U i0 $end
$var wire 1 V i1 $end
$var wire 1 Y o $end
$upscope $end
$upscope $end
$scope module a11 $end
$var wire 1 g cin $end
$var wire 1 h i0 $end
$var wire 1 i i1 $end
$var wire 2 j op [1:0] $end
$var wire 1 k t2 $end
$var wire 1 l t1 $end
$var wire 1 m t0 $end
$var wire 1 n sd $end
$var wire 1 o o $end
$var wire 1 p cout $end
$scope module addsub_0 $end
$var wire 1 q asb $end
$var wire 1 g cin $end
$var wire 1 h i0 $end
$var wire 1 i i1 $end
$var wire 1 r t $end
$var wire 1 n sd $end
$var wire 1 p cout $end
$scope module fa_0 $end
$var wire 1 g cin $end
$var wire 1 h i0 $end
$var wire 1 s t2 $end
$var wire 1 t t1 $end
$var wire 1 u t0 $end
$var wire 1 n sum $end
$var wire 1 r i1 $end
$var wire 1 p cout $end
$scope module and2_0 $end
$var wire 1 h i0 $end
$var wire 1 u o $end
$var wire 1 r i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 g i1 $end
$var wire 1 t o $end
$var wire 1 r i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 g i0 $end
$var wire 1 s o $end
$var wire 1 r i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 u i0 $end
$var wire 1 t i1 $end
$var wire 1 s i2 $end
$var wire 1 v t $end
$var wire 1 p o $end
$scope module or2_0 $end
$var wire 1 u i0 $end
$var wire 1 t i1 $end
$var wire 1 v o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 s i0 $end
$var wire 1 v i1 $end
$var wire 1 p o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 h i0 $end
$var wire 1 g i2 $end
$var wire 1 w t $end
$var wire 1 n o $end
$var wire 1 r i1 $end
$scope module xor2_0 $end
$var wire 1 h i0 $end
$var wire 1 w o $end
$var wire 1 r i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 g i0 $end
$var wire 1 w i1 $end
$var wire 1 n o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 i i0 $end
$var wire 1 q i1 $end
$var wire 1 r o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 i i0 $end
$var wire 1 h i1 $end
$var wire 1 m o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 m i0 $end
$var wire 1 x j $end
$var wire 1 k o $end
$var wire 1 l i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 k i0 $end
$var wire 1 n i1 $end
$var wire 1 y j $end
$var wire 1 o o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 h i0 $end
$var wire 1 i i1 $end
$var wire 1 l o $end
$upscope $end
$upscope $end
$scope module a12 $end
$var wire 1 z cin $end
$var wire 1 { i0 $end
$var wire 1 | i1 $end
$var wire 2 } op [1:0] $end
$var wire 1 ~ t2 $end
$var wire 1 !" t1 $end
$var wire 1 "" t0 $end
$var wire 1 #" sd $end
$var wire 1 $" o $end
$var wire 1 %" cout $end
$scope module addsub_0 $end
$var wire 1 &" asb $end
$var wire 1 z cin $end
$var wire 1 { i0 $end
$var wire 1 | i1 $end
$var wire 1 '" t $end
$var wire 1 #" sd $end
$var wire 1 %" cout $end
$scope module fa_0 $end
$var wire 1 z cin $end
$var wire 1 { i0 $end
$var wire 1 (" t2 $end
$var wire 1 )" t1 $end
$var wire 1 *" t0 $end
$var wire 1 #" sum $end
$var wire 1 '" i1 $end
$var wire 1 %" cout $end
$scope module and2_0 $end
$var wire 1 { i0 $end
$var wire 1 *" o $end
$var wire 1 '" i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 z i1 $end
$var wire 1 )" o $end
$var wire 1 '" i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 z i0 $end
$var wire 1 (" o $end
$var wire 1 '" i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 *" i0 $end
$var wire 1 )" i1 $end
$var wire 1 (" i2 $end
$var wire 1 +" t $end
$var wire 1 %" o $end
$scope module or2_0 $end
$var wire 1 *" i0 $end
$var wire 1 )" i1 $end
$var wire 1 +" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 (" i0 $end
$var wire 1 +" i1 $end
$var wire 1 %" o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 { i0 $end
$var wire 1 z i2 $end
$var wire 1 ," t $end
$var wire 1 #" o $end
$var wire 1 '" i1 $end
$scope module xor2_0 $end
$var wire 1 { i0 $end
$var wire 1 ," o $end
$var wire 1 '" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 z i0 $end
$var wire 1 ," i1 $end
$var wire 1 #" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 | i0 $end
$var wire 1 &" i1 $end
$var wire 1 '" o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 | i0 $end
$var wire 1 { i1 $end
$var wire 1 "" o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 "" i0 $end
$var wire 1 -" j $end
$var wire 1 ~ o $end
$var wire 1 !" i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 ~ i0 $end
$var wire 1 #" i1 $end
$var wire 1 ." j $end
$var wire 1 $" o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 { i0 $end
$var wire 1 | i1 $end
$var wire 1 !" o $end
$upscope $end
$upscope $end
$scope module a13 $end
$var wire 1 /" cin $end
$var wire 1 0" i0 $end
$var wire 1 1" i1 $end
$var wire 2 2" op [1:0] $end
$var wire 1 3" t2 $end
$var wire 1 4" t1 $end
$var wire 1 5" t0 $end
$var wire 1 6" sd $end
$var wire 1 7" o $end
$var wire 1 8" cout $end
$scope module addsub_0 $end
$var wire 1 9" asb $end
$var wire 1 /" cin $end
$var wire 1 0" i0 $end
$var wire 1 1" i1 $end
$var wire 1 :" t $end
$var wire 1 6" sd $end
$var wire 1 8" cout $end
$scope module fa_0 $end
$var wire 1 /" cin $end
$var wire 1 0" i0 $end
$var wire 1 ;" t2 $end
$var wire 1 <" t1 $end
$var wire 1 =" t0 $end
$var wire 1 6" sum $end
$var wire 1 :" i1 $end
$var wire 1 8" cout $end
$scope module and2_0 $end
$var wire 1 0" i0 $end
$var wire 1 =" o $end
$var wire 1 :" i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 /" i1 $end
$var wire 1 <" o $end
$var wire 1 :" i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 /" i0 $end
$var wire 1 ;" o $end
$var wire 1 :" i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 =" i0 $end
$var wire 1 <" i1 $end
$var wire 1 ;" i2 $end
$var wire 1 >" t $end
$var wire 1 8" o $end
$scope module or2_0 $end
$var wire 1 =" i0 $end
$var wire 1 <" i1 $end
$var wire 1 >" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 ;" i0 $end
$var wire 1 >" i1 $end
$var wire 1 8" o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 0" i0 $end
$var wire 1 /" i2 $end
$var wire 1 ?" t $end
$var wire 1 6" o $end
$var wire 1 :" i1 $end
$scope module xor2_0 $end
$var wire 1 0" i0 $end
$var wire 1 ?" o $end
$var wire 1 :" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 /" i0 $end
$var wire 1 ?" i1 $end
$var wire 1 6" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 1" i0 $end
$var wire 1 9" i1 $end
$var wire 1 :" o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 1" i0 $end
$var wire 1 0" i1 $end
$var wire 1 5" o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 5" i0 $end
$var wire 1 @" j $end
$var wire 1 3" o $end
$var wire 1 4" i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 3" i0 $end
$var wire 1 6" i1 $end
$var wire 1 A" j $end
$var wire 1 7" o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 0" i0 $end
$var wire 1 1" i1 $end
$var wire 1 4" o $end
$upscope $end
$upscope $end
$scope module a14 $end
$var wire 1 B" cin $end
$var wire 1 C" i0 $end
$var wire 1 D" i1 $end
$var wire 2 E" op [1:0] $end
$var wire 1 F" t2 $end
$var wire 1 G" t1 $end
$var wire 1 H" t0 $end
$var wire 1 I" sd $end
$var wire 1 J" o $end
$var wire 1 K" cout $end
$scope module addsub_0 $end
$var wire 1 L" asb $end
$var wire 1 B" cin $end
$var wire 1 C" i0 $end
$var wire 1 D" i1 $end
$var wire 1 M" t $end
$var wire 1 I" sd $end
$var wire 1 K" cout $end
$scope module fa_0 $end
$var wire 1 B" cin $end
$var wire 1 C" i0 $end
$var wire 1 N" t2 $end
$var wire 1 O" t1 $end
$var wire 1 P" t0 $end
$var wire 1 I" sum $end
$var wire 1 M" i1 $end
$var wire 1 K" cout $end
$scope module and2_0 $end
$var wire 1 C" i0 $end
$var wire 1 P" o $end
$var wire 1 M" i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 B" i1 $end
$var wire 1 O" o $end
$var wire 1 M" i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 B" i0 $end
$var wire 1 N" o $end
$var wire 1 M" i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 P" i0 $end
$var wire 1 O" i1 $end
$var wire 1 N" i2 $end
$var wire 1 Q" t $end
$var wire 1 K" o $end
$scope module or2_0 $end
$var wire 1 P" i0 $end
$var wire 1 O" i1 $end
$var wire 1 Q" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 N" i0 $end
$var wire 1 Q" i1 $end
$var wire 1 K" o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 C" i0 $end
$var wire 1 B" i2 $end
$var wire 1 R" t $end
$var wire 1 I" o $end
$var wire 1 M" i1 $end
$scope module xor2_0 $end
$var wire 1 C" i0 $end
$var wire 1 R" o $end
$var wire 1 M" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 B" i0 $end
$var wire 1 R" i1 $end
$var wire 1 I" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 D" i0 $end
$var wire 1 L" i1 $end
$var wire 1 M" o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 D" i0 $end
$var wire 1 C" i1 $end
$var wire 1 H" o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 H" i0 $end
$var wire 1 S" j $end
$var wire 1 F" o $end
$var wire 1 G" i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 F" i0 $end
$var wire 1 I" i1 $end
$var wire 1 T" j $end
$var wire 1 J" o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 C" i0 $end
$var wire 1 D" i1 $end
$var wire 1 G" o $end
$upscope $end
$upscope $end
$scope module a15 $end
$var wire 1 U" cin $end
$var wire 1 V" i0 $end
$var wire 1 W" i1 $end
$var wire 2 X" op [1:0] $end
$var wire 1 Y" t2 $end
$var wire 1 Z" t1 $end
$var wire 1 [" t0 $end
$var wire 1 \" sd $end
$var wire 1 ]" o $end
$var wire 1 " cout $end
$scope module addsub_0 $end
$var wire 1 ^" asb $end
$var wire 1 U" cin $end
$var wire 1 V" i0 $end
$var wire 1 W" i1 $end
$var wire 1 _" t $end
$var wire 1 \" sd $end
$var wire 1 " cout $end
$scope module fa_0 $end
$var wire 1 U" cin $end
$var wire 1 V" i0 $end
$var wire 1 `" t2 $end
$var wire 1 a" t1 $end
$var wire 1 b" t0 $end
$var wire 1 \" sum $end
$var wire 1 _" i1 $end
$var wire 1 " cout $end
$scope module and2_0 $end
$var wire 1 V" i0 $end
$var wire 1 b" o $end
$var wire 1 _" i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 U" i1 $end
$var wire 1 a" o $end
$var wire 1 _" i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 U" i0 $end
$var wire 1 `" o $end
$var wire 1 _" i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 b" i0 $end
$var wire 1 a" i1 $end
$var wire 1 `" i2 $end
$var wire 1 c" t $end
$var wire 1 " o $end
$scope module or2_0 $end
$var wire 1 b" i0 $end
$var wire 1 a" i1 $end
$var wire 1 c" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 `" i0 $end
$var wire 1 c" i1 $end
$var wire 1 " o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 V" i0 $end
$var wire 1 U" i2 $end
$var wire 1 d" t $end
$var wire 1 \" o $end
$var wire 1 _" i1 $end
$scope module xor2_0 $end
$var wire 1 V" i0 $end
$var wire 1 d" o $end
$var wire 1 _" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 U" i0 $end
$var wire 1 d" i1 $end
$var wire 1 \" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 W" i0 $end
$var wire 1 ^" i1 $end
$var wire 1 _" o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 W" i0 $end
$var wire 1 V" i1 $end
$var wire 1 [" o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 [" i0 $end
$var wire 1 e" j $end
$var wire 1 Y" o $end
$var wire 1 Z" i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 Y" i0 $end
$var wire 1 \" i1 $end
$var wire 1 f" j $end
$var wire 1 ]" o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 V" i0 $end
$var wire 1 W" i1 $end
$var wire 1 Z" o $end
$upscope $end
$upscope $end
$scope module a2 $end
$var wire 1 g" cin $end
$var wire 1 h" i0 $end
$var wire 1 i" i1 $end
$var wire 2 j" op [1:0] $end
$var wire 1 k" t2 $end
$var wire 1 l" t1 $end
$var wire 1 m" t0 $end
$var wire 1 n" sd $end
$var wire 1 o" o $end
$var wire 1 p" cout $end
$scope module addsub_0 $end
$var wire 1 q" asb $end
$var wire 1 g" cin $end
$var wire 1 h" i0 $end
$var wire 1 i" i1 $end
$var wire 1 r" t $end
$var wire 1 n" sd $end
$var wire 1 p" cout $end
$scope module fa_0 $end
$var wire 1 g" cin $end
$var wire 1 h" i0 $end
$var wire 1 s" t2 $end
$var wire 1 t" t1 $end
$var wire 1 u" t0 $end
$var wire 1 n" sum $end
$var wire 1 r" i1 $end
$var wire 1 p" cout $end
$scope module and2_0 $end
$var wire 1 h" i0 $end
$var wire 1 u" o $end
$var wire 1 r" i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 g" i1 $end
$var wire 1 t" o $end
$var wire 1 r" i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 g" i0 $end
$var wire 1 s" o $end
$var wire 1 r" i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 u" i0 $end
$var wire 1 t" i1 $end
$var wire 1 s" i2 $end
$var wire 1 v" t $end
$var wire 1 p" o $end
$scope module or2_0 $end
$var wire 1 u" i0 $end
$var wire 1 t" i1 $end
$var wire 1 v" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 s" i0 $end
$var wire 1 v" i1 $end
$var wire 1 p" o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 h" i0 $end
$var wire 1 g" i2 $end
$var wire 1 w" t $end
$var wire 1 n" o $end
$var wire 1 r" i1 $end
$scope module xor2_0 $end
$var wire 1 h" i0 $end
$var wire 1 w" o $end
$var wire 1 r" i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 g" i0 $end
$var wire 1 w" i1 $end
$var wire 1 n" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 i" i0 $end
$var wire 1 q" i1 $end
$var wire 1 r" o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 i" i0 $end
$var wire 1 h" i1 $end
$var wire 1 m" o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 m" i0 $end
$var wire 1 x" j $end
$var wire 1 k" o $end
$var wire 1 l" i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 k" i0 $end
$var wire 1 n" i1 $end
$var wire 1 y" j $end
$var wire 1 o" o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 h" i0 $end
$var wire 1 i" i1 $end
$var wire 1 l" o $end
$upscope $end
$upscope $end
$scope module a3 $end
$var wire 1 z" cin $end
$var wire 1 {" i0 $end
$var wire 1 |" i1 $end
$var wire 2 }" op [1:0] $end
$var wire 1 ~" t2 $end
$var wire 1 !# t1 $end
$var wire 1 "# t0 $end
$var wire 1 ## sd $end
$var wire 1 $# o $end
$var wire 1 %# cout $end
$scope module addsub_0 $end
$var wire 1 &# asb $end
$var wire 1 z" cin $end
$var wire 1 {" i0 $end
$var wire 1 |" i1 $end
$var wire 1 '# t $end
$var wire 1 ## sd $end
$var wire 1 %# cout $end
$scope module fa_0 $end
$var wire 1 z" cin $end
$var wire 1 {" i0 $end
$var wire 1 (# t2 $end
$var wire 1 )# t1 $end
$var wire 1 *# t0 $end
$var wire 1 ## sum $end
$var wire 1 '# i1 $end
$var wire 1 %# cout $end
$scope module and2_0 $end
$var wire 1 {" i0 $end
$var wire 1 *# o $end
$var wire 1 '# i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 z" i1 $end
$var wire 1 )# o $end
$var wire 1 '# i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 z" i0 $end
$var wire 1 (# o $end
$var wire 1 '# i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 *# i0 $end
$var wire 1 )# i1 $end
$var wire 1 (# i2 $end
$var wire 1 +# t $end
$var wire 1 %# o $end
$scope module or2_0 $end
$var wire 1 *# i0 $end
$var wire 1 )# i1 $end
$var wire 1 +# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 (# i0 $end
$var wire 1 +# i1 $end
$var wire 1 %# o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 {" i0 $end
$var wire 1 z" i2 $end
$var wire 1 ,# t $end
$var wire 1 ## o $end
$var wire 1 '# i1 $end
$scope module xor2_0 $end
$var wire 1 {" i0 $end
$var wire 1 ,# o $end
$var wire 1 '# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 z" i0 $end
$var wire 1 ,# i1 $end
$var wire 1 ## o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 |" i0 $end
$var wire 1 &# i1 $end
$var wire 1 '# o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 |" i0 $end
$var wire 1 {" i1 $end
$var wire 1 "# o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 "# i0 $end
$var wire 1 -# j $end
$var wire 1 ~" o $end
$var wire 1 !# i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 ~" i0 $end
$var wire 1 ## i1 $end
$var wire 1 .# j $end
$var wire 1 $# o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 {" i0 $end
$var wire 1 |" i1 $end
$var wire 1 !# o $end
$upscope $end
$upscope $end
$scope module a4 $end
$var wire 1 /# cin $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 2 2# op [1:0] $end
$var wire 1 3# t2 $end
$var wire 1 4# t1 $end
$var wire 1 5# t0 $end
$var wire 1 6# sd $end
$var wire 1 7# o $end
$var wire 1 8# cout $end
$scope module addsub_0 $end
$var wire 1 9# asb $end
$var wire 1 /# cin $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 1 :# t $end
$var wire 1 6# sd $end
$var wire 1 8# cout $end
$scope module fa_0 $end
$var wire 1 /# cin $end
$var wire 1 0# i0 $end
$var wire 1 ;# t2 $end
$var wire 1 <# t1 $end
$var wire 1 =# t0 $end
$var wire 1 6# sum $end
$var wire 1 :# i1 $end
$var wire 1 8# cout $end
$scope module and2_0 $end
$var wire 1 0# i0 $end
$var wire 1 =# o $end
$var wire 1 :# i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 /# i1 $end
$var wire 1 <# o $end
$var wire 1 :# i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 /# i0 $end
$var wire 1 ;# o $end
$var wire 1 :# i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 =# i0 $end
$var wire 1 <# i1 $end
$var wire 1 ;# i2 $end
$var wire 1 ># t $end
$var wire 1 8# o $end
$scope module or2_0 $end
$var wire 1 =# i0 $end
$var wire 1 <# i1 $end
$var wire 1 ># o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 ;# i0 $end
$var wire 1 ># i1 $end
$var wire 1 8# o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 0# i0 $end
$var wire 1 /# i2 $end
$var wire 1 ?# t $end
$var wire 1 6# o $end
$var wire 1 :# i1 $end
$scope module xor2_0 $end
$var wire 1 0# i0 $end
$var wire 1 ?# o $end
$var wire 1 :# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 /# i0 $end
$var wire 1 ?# i1 $end
$var wire 1 6# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 1# i0 $end
$var wire 1 9# i1 $end
$var wire 1 :# o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 1# i0 $end
$var wire 1 0# i1 $end
$var wire 1 5# o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 5# i0 $end
$var wire 1 @# j $end
$var wire 1 3# o $end
$var wire 1 4# i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 3# i0 $end
$var wire 1 6# i1 $end
$var wire 1 A# j $end
$var wire 1 7# o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 0# i0 $end
$var wire 1 1# i1 $end
$var wire 1 4# o $end
$upscope $end
$upscope $end
$scope module a5 $end
$var wire 1 B# cin $end
$var wire 1 C# i0 $end
$var wire 1 D# i1 $end
$var wire 2 E# op [1:0] $end
$var wire 1 F# t2 $end
$var wire 1 G# t1 $end
$var wire 1 H# t0 $end
$var wire 1 I# sd $end
$var wire 1 J# o $end
$var wire 1 K# cout $end
$scope module addsub_0 $end
$var wire 1 L# asb $end
$var wire 1 B# cin $end
$var wire 1 C# i0 $end
$var wire 1 D# i1 $end
$var wire 1 M# t $end
$var wire 1 I# sd $end
$var wire 1 K# cout $end
$scope module fa_0 $end
$var wire 1 B# cin $end
$var wire 1 C# i0 $end
$var wire 1 N# t2 $end
$var wire 1 O# t1 $end
$var wire 1 P# t0 $end
$var wire 1 I# sum $end
$var wire 1 M# i1 $end
$var wire 1 K# cout $end
$scope module and2_0 $end
$var wire 1 C# i0 $end
$var wire 1 P# o $end
$var wire 1 M# i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 B# i1 $end
$var wire 1 O# o $end
$var wire 1 M# i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 B# i0 $end
$var wire 1 N# o $end
$var wire 1 M# i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 P# i0 $end
$var wire 1 O# i1 $end
$var wire 1 N# i2 $end
$var wire 1 Q# t $end
$var wire 1 K# o $end
$scope module or2_0 $end
$var wire 1 P# i0 $end
$var wire 1 O# i1 $end
$var wire 1 Q# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 N# i0 $end
$var wire 1 Q# i1 $end
$var wire 1 K# o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 C# i0 $end
$var wire 1 B# i2 $end
$var wire 1 R# t $end
$var wire 1 I# o $end
$var wire 1 M# i1 $end
$scope module xor2_0 $end
$var wire 1 C# i0 $end
$var wire 1 R# o $end
$var wire 1 M# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 B# i0 $end
$var wire 1 R# i1 $end
$var wire 1 I# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 D# i0 $end
$var wire 1 L# i1 $end
$var wire 1 M# o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 D# i0 $end
$var wire 1 C# i1 $end
$var wire 1 H# o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 H# i0 $end
$var wire 1 S# j $end
$var wire 1 F# o $end
$var wire 1 G# i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 F# i0 $end
$var wire 1 I# i1 $end
$var wire 1 T# j $end
$var wire 1 J# o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 C# i0 $end
$var wire 1 D# i1 $end
$var wire 1 G# o $end
$upscope $end
$upscope $end
$scope module a6 $end
$var wire 1 U# cin $end
$var wire 1 V# i0 $end
$var wire 1 W# i1 $end
$var wire 2 X# op [1:0] $end
$var wire 1 Y# t2 $end
$var wire 1 Z# t1 $end
$var wire 1 [# t0 $end
$var wire 1 \# sd $end
$var wire 1 ]# o $end
$var wire 1 ^# cout $end
$scope module addsub_0 $end
$var wire 1 _# asb $end
$var wire 1 U# cin $end
$var wire 1 V# i0 $end
$var wire 1 W# i1 $end
$var wire 1 `# t $end
$var wire 1 \# sd $end
$var wire 1 ^# cout $end
$scope module fa_0 $end
$var wire 1 U# cin $end
$var wire 1 V# i0 $end
$var wire 1 a# t2 $end
$var wire 1 b# t1 $end
$var wire 1 c# t0 $end
$var wire 1 \# sum $end
$var wire 1 `# i1 $end
$var wire 1 ^# cout $end
$scope module and2_0 $end
$var wire 1 V# i0 $end
$var wire 1 c# o $end
$var wire 1 `# i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 U# i1 $end
$var wire 1 b# o $end
$var wire 1 `# i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 U# i0 $end
$var wire 1 a# o $end
$var wire 1 `# i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 c# i0 $end
$var wire 1 b# i1 $end
$var wire 1 a# i2 $end
$var wire 1 d# t $end
$var wire 1 ^# o $end
$scope module or2_0 $end
$var wire 1 c# i0 $end
$var wire 1 b# i1 $end
$var wire 1 d# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 a# i0 $end
$var wire 1 d# i1 $end
$var wire 1 ^# o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 V# i0 $end
$var wire 1 U# i2 $end
$var wire 1 e# t $end
$var wire 1 \# o $end
$var wire 1 `# i1 $end
$scope module xor2_0 $end
$var wire 1 V# i0 $end
$var wire 1 e# o $end
$var wire 1 `# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 U# i0 $end
$var wire 1 e# i1 $end
$var wire 1 \# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 W# i0 $end
$var wire 1 _# i1 $end
$var wire 1 `# o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 W# i0 $end
$var wire 1 V# i1 $end
$var wire 1 [# o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 [# i0 $end
$var wire 1 f# j $end
$var wire 1 Y# o $end
$var wire 1 Z# i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 Y# i0 $end
$var wire 1 \# i1 $end
$var wire 1 g# j $end
$var wire 1 ]# o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 V# i0 $end
$var wire 1 W# i1 $end
$var wire 1 Z# o $end
$upscope $end
$upscope $end
$scope module a7 $end
$var wire 1 h# cin $end
$var wire 1 i# i0 $end
$var wire 1 j# i1 $end
$var wire 2 k# op [1:0] $end
$var wire 1 l# t2 $end
$var wire 1 m# t1 $end
$var wire 1 n# t0 $end
$var wire 1 o# sd $end
$var wire 1 p# o $end
$var wire 1 q# cout $end
$scope module addsub_0 $end
$var wire 1 r# asb $end
$var wire 1 h# cin $end
$var wire 1 i# i0 $end
$var wire 1 j# i1 $end
$var wire 1 s# t $end
$var wire 1 o# sd $end
$var wire 1 q# cout $end
$scope module fa_0 $end
$var wire 1 h# cin $end
$var wire 1 i# i0 $end
$var wire 1 t# t2 $end
$var wire 1 u# t1 $end
$var wire 1 v# t0 $end
$var wire 1 o# sum $end
$var wire 1 s# i1 $end
$var wire 1 q# cout $end
$scope module and2_0 $end
$var wire 1 i# i0 $end
$var wire 1 v# o $end
$var wire 1 s# i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 h# i1 $end
$var wire 1 u# o $end
$var wire 1 s# i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 h# i0 $end
$var wire 1 t# o $end
$var wire 1 s# i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 v# i0 $end
$var wire 1 u# i1 $end
$var wire 1 t# i2 $end
$var wire 1 w# t $end
$var wire 1 q# o $end
$scope module or2_0 $end
$var wire 1 v# i0 $end
$var wire 1 u# i1 $end
$var wire 1 w# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 t# i0 $end
$var wire 1 w# i1 $end
$var wire 1 q# o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 i# i0 $end
$var wire 1 h# i2 $end
$var wire 1 x# t $end
$var wire 1 o# o $end
$var wire 1 s# i1 $end
$scope module xor2_0 $end
$var wire 1 i# i0 $end
$var wire 1 x# o $end
$var wire 1 s# i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 h# i0 $end
$var wire 1 x# i1 $end
$var wire 1 o# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 j# i0 $end
$var wire 1 r# i1 $end
$var wire 1 s# o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 j# i0 $end
$var wire 1 i# i1 $end
$var wire 1 n# o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 n# i0 $end
$var wire 1 y# j $end
$var wire 1 l# o $end
$var wire 1 m# i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 l# i0 $end
$var wire 1 o# i1 $end
$var wire 1 z# j $end
$var wire 1 p# o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 i# i0 $end
$var wire 1 j# i1 $end
$var wire 1 m# o $end
$upscope $end
$upscope $end
$scope module a8 $end
$var wire 1 {# cin $end
$var wire 1 |# i0 $end
$var wire 1 }# i1 $end
$var wire 2 ~# op [1:0] $end
$var wire 1 !$ t2 $end
$var wire 1 "$ t1 $end
$var wire 1 #$ t0 $end
$var wire 1 $$ sd $end
$var wire 1 %$ o $end
$var wire 1 &$ cout $end
$scope module addsub_0 $end
$var wire 1 '$ asb $end
$var wire 1 {# cin $end
$var wire 1 |# i0 $end
$var wire 1 }# i1 $end
$var wire 1 ($ t $end
$var wire 1 $$ sd $end
$var wire 1 &$ cout $end
$scope module fa_0 $end
$var wire 1 {# cin $end
$var wire 1 |# i0 $end
$var wire 1 )$ t2 $end
$var wire 1 *$ t1 $end
$var wire 1 +$ t0 $end
$var wire 1 $$ sum $end
$var wire 1 ($ i1 $end
$var wire 1 &$ cout $end
$scope module and2_0 $end
$var wire 1 |# i0 $end
$var wire 1 +$ o $end
$var wire 1 ($ i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 {# i1 $end
$var wire 1 *$ o $end
$var wire 1 ($ i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 {# i0 $end
$var wire 1 )$ o $end
$var wire 1 ($ i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 +$ i0 $end
$var wire 1 *$ i1 $end
$var wire 1 )$ i2 $end
$var wire 1 ,$ t $end
$var wire 1 &$ o $end
$scope module or2_0 $end
$var wire 1 +$ i0 $end
$var wire 1 *$ i1 $end
$var wire 1 ,$ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 )$ i0 $end
$var wire 1 ,$ i1 $end
$var wire 1 &$ o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 |# i0 $end
$var wire 1 {# i2 $end
$var wire 1 -$ t $end
$var wire 1 $$ o $end
$var wire 1 ($ i1 $end
$scope module xor2_0 $end
$var wire 1 |# i0 $end
$var wire 1 -$ o $end
$var wire 1 ($ i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 {# i0 $end
$var wire 1 -$ i1 $end
$var wire 1 $$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 }# i0 $end
$var wire 1 '$ i1 $end
$var wire 1 ($ o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 }# i0 $end
$var wire 1 |# i1 $end
$var wire 1 #$ o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 #$ i0 $end
$var wire 1 .$ j $end
$var wire 1 !$ o $end
$var wire 1 "$ i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 !$ i0 $end
$var wire 1 $$ i1 $end
$var wire 1 /$ j $end
$var wire 1 %$ o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 |# i0 $end
$var wire 1 }# i1 $end
$var wire 1 "$ o $end
$upscope $end
$upscope $end
$scope module a9 $end
$var wire 1 0$ cin $end
$var wire 1 1$ i0 $end
$var wire 1 2$ i1 $end
$var wire 2 3$ op [1:0] $end
$var wire 1 4$ t2 $end
$var wire 1 5$ t1 $end
$var wire 1 6$ t0 $end
$var wire 1 7$ sd $end
$var wire 1 8$ o $end
$var wire 1 9$ cout $end
$scope module addsub_0 $end
$var wire 1 :$ asb $end
$var wire 1 0$ cin $end
$var wire 1 1$ i0 $end
$var wire 1 2$ i1 $end
$var wire 1 ;$ t $end
$var wire 1 7$ sd $end
$var wire 1 9$ cout $end
$scope module fa_0 $end
$var wire 1 0$ cin $end
$var wire 1 1$ i0 $end
$var wire 1 <$ t2 $end
$var wire 1 =$ t1 $end
$var wire 1 >$ t0 $end
$var wire 1 7$ sum $end
$var wire 1 ;$ i1 $end
$var wire 1 9$ cout $end
$scope module and2_0 $end
$var wire 1 1$ i0 $end
$var wire 1 >$ o $end
$var wire 1 ;$ i1 $end
$upscope $end
$scope module and2_1 $end
$var wire 1 0$ i1 $end
$var wire 1 =$ o $end
$var wire 1 ;$ i0 $end
$upscope $end
$scope module and2_2 $end
$var wire 1 0$ i0 $end
$var wire 1 <$ o $end
$var wire 1 ;$ i1 $end
$upscope $end
$scope module or3_0 $end
$var wire 1 >$ i0 $end
$var wire 1 =$ i1 $end
$var wire 1 <$ i2 $end
$var wire 1 ?$ t $end
$var wire 1 9$ o $end
$scope module or2_0 $end
$var wire 1 >$ i0 $end
$var wire 1 =$ i1 $end
$var wire 1 ?$ o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 <$ i0 $end
$var wire 1 ?$ i1 $end
$var wire 1 9$ o $end
$upscope $end
$upscope $end
$scope module xor3_0 $end
$var wire 1 1$ i0 $end
$var wire 1 0$ i2 $end
$var wire 1 @$ t $end
$var wire 1 7$ o $end
$var wire 1 ;$ i1 $end
$scope module xor2_0 $end
$var wire 1 1$ i0 $end
$var wire 1 @$ o $end
$var wire 1 ;$ i1 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 0$ i0 $end
$var wire 1 @$ i1 $end
$var wire 1 7$ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module xor2_0 $end
$var wire 1 2$ i0 $end
$var wire 1 :$ i1 $end
$var wire 1 ;$ o $end
$upscope $end
$upscope $end
$scope module and2_3 $end
$var wire 1 2$ i0 $end
$var wire 1 1$ i1 $end
$var wire 1 6$ o $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 6$ i0 $end
$var wire 1 A$ j $end
$var wire 1 4$ o $end
$var wire 1 5$ i1 $end
$upscope $end
$scope module mux2_1 $end
$var wire 1 4$ i0 $end
$var wire 1 7$ i1 $end
$var wire 1 B$ j $end
$var wire 1 8$ o $end
$upscope $end
$scope module or2_0 $end
$var wire 1 1$ i0 $end
$var wire 1 2$ i1 $end
$var wire 1 5$ o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
05$
04$
b0 3$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
b0 ~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
b0 k#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0Y#
b0 X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
b0 E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
b0 2#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
0&#
0%#
0$#
0##
0"#
0!#
0~"
b0 }"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
b0 j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
b0 X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
b0 E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
b0 2"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
b0 }
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
b0 j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
b0 W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
b0 D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
b0 1
00
0/
0.
b0 -
b0 ,
b0 +
b0 *
b0 )
bx (
1'
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#50
1#
#60
b0 (
#100
0#
#125
0'
#150
1#
#160
b1 (
#200
0#
#250
1#
#260
1H
1##
1I#
1o#
1$$
1[
1#"
1I"
15
1n"
16#
1\#
17$
1n
16"
1\"
1Q
1,#
1R#
1x#
1-$
1d
1,"
1R"
1>
13
1w"
1l"
1?#
14#
1e#
1Z#
1@$
15$
1w
1l
1?"
14"
1d"
1Z"
1L
1F
1'#
1!#
1M#
1G#
1s#
1m#
1($
1"$
1_
1Y
1'"
1!"
1M"
1G"
1/
1h"
10#
1V#
11$
1h
10"
1V"
1C
1|"
1D#
1j#
1}#
1V
1|
1D"
b10 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#300
0#
#350
1#
#360
0H
1A
b100000000000000 -
17
05
1=
b1 !
b1 ,
16
0>
1<
12
19
14
0L
0'#
0M#
0s#
0($
0_
0'"
0M"
1B
1{"
1C#
1i#
1|#
1U
1{
1C"
10
0C
0|"
0D#
0j#
0}#
0V
0|
0D"
b11 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#400
0#
#450
1#
#460
1U"
1Q"
1K"
1O"
1N"
0I"
1B"
1>"
18"
1<"
1;"
06"
1/"
1+"
1%"
1)"
1("
0#"
1z
1v
1p
1t
1s
0n
1g
1c
1]
1a
1`
0[
1T
1?$
19$
1=$
1<$
07$
10$
1,$
1&$
1*$
1)$
0$$
1{#
1w#
1q#
1u#
1t#
0o#
1h#
1d#
1^#
1b#
1a#
0\#
1U#
1Q#
1K#
1O#
1N#
0I#
1B#
1>#
18#
1<#
1;#
06#
1/#
1+#
1%#
1)#
1(#
0##
1z"
1v"
1p"
1t"
1s"
0n"
1g"
b111111111111111 -
1J
1P
1\"
1M
1N
0d"
0Z"
1L
1r"
1'#
1:#
1M#
1`#
1s#
1($
1;$
1_
1r
1'"
1:"
1M"
0B
0h"
0{"
00#
0C#
0V#
0i#
0|#
01$
0U
0h
0{
00"
0C"
0V"
1C
1i"
1|"
11#
1D#
1W#
1j#
1}#
12$
1V
1i
1|
11"
1D"
b100 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#500
0#
#550
1#
#560
0\"
1"
1c"
b0 !
b0 ,
06
1d"
1`"
1a"
1;
1:
02
1_"
0<
1>
04
03
0F
0l"
0!#
04#
0G#
0Z#
0m#
0"$
05$
0Y
0l
0!"
04"
0G"
1.
18
1?
1K
1R
1^
1e
1q
1x
1&"
1-"
19"
1@"
1L"
1S"
1^"
1e"
1q"
1x"
1&#
1-#
19#
1@#
1L#
1S#
1_#
1f#
1r#
1y#
1'$
1.$
1:$
1A$
0/
00
0C
0i"
0|"
01#
0D#
0W#
0j#
0}#
02$
0V
0i
0|
01"
0D"
b101 (
b1 &
b1 +
b1 1
b1 D
b1 W
b1 j
b1 }
b1 2"
b1 E"
b1 X"
b1 j"
b1 }"
b1 2#
b1 E#
b1 X#
b1 k#
b1 ~#
b1 3$
b0 $
b0 )
b0 %
b0 *
#600
0#
#650
1#
#660
0t"
0s"
0<#
0;#
0b#
0a#
0=$
0<$
0t
0s
0<"
0;"
0a"
0`"
0g"
0/#
0U#
0{#
00$
0g
0/"
0U"
16
1o"
17#
1]#
18$
1o
17"
1]"
1H
0J
0P
1I
1##
0%#
0+#
1$#
1I#
0K#
0Q#
1J#
1o#
0q#
0w#
1p#
0$$
0&$
0,$
1%$
1[
0]
0c
1\
1#"
0%"
0+"
1$"
1I"
b101010100101010 -
0K"
0Q"
b1111111111111111 !
b1111111111111111 ,
1J"
15
12
0n"
1k"
06#
13#
0\#
1Y#
07$
14$
0n
1k
06"
13"
0\"
1Y"
0Q
0M
0N
1E
0,#
0(#
0)#
1~"
0R#
0N#
0O#
1F#
0x#
0t#
0u#
1l#
0-$
0)$
0*$
1!$
0d
0`
0a
1X
0,"
0("
0)"
1~
0R"
0N"
0O"
1F"
1<
0>
13
1u"
0w"
1l"
1=#
0?#
14#
1c#
0e#
1Z#
1>$
0@$
15$
1u
0w
1l
1="
0?"
14"
1b"
0d"
1Z"
0L
1F
0'#
1!#
0M#
1G#
0s#
1m#
0($
1"$
0_
1Y
0'"
1!"
0M"
1G"
1/
1h"
10#
1V#
11$
1h
10"
1V"
1C
1|"
1D#
1j#
1}#
1V
1|
1D"
b110 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#700
0#
#750
1#
#760
1=$
1<$
17$
0H
1t"
1s"
1n"
1<#
1;#
16#
1b#
1a#
1\#
1*$
1)$
1$$
1t
1s
1n
1<"
1;"
16"
1a"
1`"
1\"
10$
0A
1g"
1/#
1U#
1{#
1g
1/"
1U"
1&$
05
07
0=
1J
1%#
1K#
1q#
1]
1%"
b11111111111111 -
1K"
1P
1+#
1Q#
1w#
1,$
1c
1+"
1Q"
1>
0:
0;
0<
0M
0N
1(#
1)#
1N#
1O#
1t#
1u#
1`
1a
1("
1)"
1N"
1O"
1O
1*#
1P#
1v#
1+$
1b
1*"
1P"
09
14
1L
1'#
1M#
1s#
1($
1_
1'"
1M"
1B
1{"
1C#
1i#
1|#
1U
1{
1C"
10
0C
0|"
0D#
0j#
0}#
0V
0|
0D"
b111 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#800
0#
#850
1#
#860
0"
0c"
0n"
0##
06#
0I#
0\#
0o#
0$$
07$
0[
0n
0#"
06"
0I"
0a"
0`"
0g"
0z"
0/#
0B#
0U#
0h#
0{#
00$
0T
0g
0z
0/"
0B"
0U"
0J
b111111111111111 !
b111111111111111 ,
0]"
0p"
0%#
08#
0K#
0^#
0q#
0&$
09$
0]
0p
0%"
08"
b0 -
0K"
0P
0v"
0+#
0>#
0Q#
0d#
0w#
0,$
0?$
0c
0v
0+"
0>"
0Q"
1\"
0Y"
0s"
0t"
0(#
0)#
0;#
0<#
0N#
0O#
0a#
0b#
0t#
0u#
0)$
0*$
0<$
0=$
0`
0a
0s
0t
0("
0)"
0;"
0<"
0N"
0O"
0O
0u"
0*#
0=#
0P#
0c#
0v#
0+$
0>$
0b
0u
0*"
0="
0P"
0b"
1d"
0Z"
0L
0r"
0'#
0:#
0M#
0`#
0s#
0($
0;$
0_
0r
0'"
0:"
0M"
0B
0h"
0{"
00#
0C#
0V#
0i#
0|#
01$
0U
0h
0{
00"
0C"
0V"
1C
1i"
1|"
11#
1D#
1W#
1j#
1}#
12$
1V
1i
1|
11"
1D"
b1000 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#900
0#
#950
1#
#960
0\"
0d"
02
06
0E
0I
0X
0\
0k
0o
0~
0$"
03"
07"
0F"
0J"
0_"
0]"
0k"
0o"
0~"
0$#
03#
07#
0F#
0J#
0Y#
0]#
0l#
0p#
0!$
0%$
04$
b0 !
b0 ,
08$
0>
04
03
0F
0l"
0!#
04#
0G#
0Z#
0m#
0"$
05$
0Y
0l
0!"
04"
0G"
0.
08
0?
1@
0K
0R
1S
0^
0e
1f
0q
0x
1y
0&"
0-"
1."
09"
0@"
1A"
0L"
0S"
1T"
0^"
0e"
1f"
0q"
0x"
1y"
0&#
0-#
1.#
09#
0@#
1A#
0L#
0S#
1T#
0_#
0f#
1g#
0r#
0y#
1z#
0'$
0.$
1/$
0:$
0A$
1B$
0/
00
0C
0i"
0|"
01#
0D#
0W#
0j#
0}#
02$
0V
0i
0|
01"
0D"
b1001 (
b10 &
b10 +
b10 1
b10 D
b10 W
b10 j
b10 }
b10 2"
b10 E"
b10 X"
b10 j"
b10 }"
b10 2#
b10 E#
b10 X#
b10 k#
b10 ~#
b10 3$
b0 $
b0 )
b0 %
b0 *
#1000
0#
#1050
1#
#1060
1I
1$#
1J#
1p#
1%$
1\
1$"
1J"
16
1o"
17#
1]#
18$
1o
17"
b1111111111111111 !
b1111111111111111 ,
1]"
1H
1##
1I#
1o#
1$$
1[
1#"
1I"
15
1n"
16#
1\#
17$
1n
16"
1\"
1Q
1,#
1R#
1x#
1-$
1d
1,"
1R"
1>
13
1w"
1l"
1?#
14#
1e#
1Z#
1@$
15$
1w
1l
1?"
14"
1d"
1Z"
1L
1F
1'#
1!#
1M#
1G#
1s#
1m#
1($
1"$
1_
1Y
1'"
1!"
1M"
1G"
1/
1h"
10#
1V#
11$
1h
10"
1V"
1C
1|"
1D#
1j#
1}#
1V
1|
1D"
b1010 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#1100
0#
#1150
1#
#1160
0I
0H
1A
b1111111111111100 !
b1111111111111100 ,
06
b100000000000000 -
17
05
1=
0>
1<
12
19
14
0L
0'#
0M#
0s#
0($
0_
0'"
0M"
1B
1{"
1C#
1i#
1|#
1U
1{
1C"
10
0C
0|"
0D#
0j#
0}#
0V
0|
0D"
b1011 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#1200
0#
#1250
1#
#1260
1U"
1Q"
1K"
0J"
1O"
1N"
0I"
1B"
1>"
18"
07"
1<"
1;"
06"
1/"
1+"
1%"
0$"
1)"
1("
0#"
1z
1v
1p
0o
1t
1s
0n
1g
1c
1]
0\
1a
1`
0[
1T
1?$
19$
08$
1=$
1<$
07$
10$
1,$
1&$
0%$
1*$
1)$
0$$
1{#
1w#
1q#
0p#
1u#
1t#
0o#
1h#
1d#
1^#
0]#
1b#
1a#
0\#
1U#
1Q#
1K#
0J#
1O#
1N#
0I#
1B#
1>#
18#
07#
1<#
1;#
06#
1/#
1+#
1%#
0$#
1)#
1(#
0##
1z"
1v"
1p"
0o"
1t"
1s"
0n"
1g"
b1000000000000000 !
b1000000000000000 ,
1]"
b111111111111111 -
1J
1P
1\"
1M
1N
0d"
0Z"
1L
1r"
1'#
1:#
1M#
1`#
1s#
1($
1;$
1_
1r
1'"
1:"
1M"
0B
0h"
0{"
00#
0C#
0V#
0i#
0|#
01$
0U
0h
0{
00"
0C"
0V"
1C
1i"
1|"
11#
1D#
1W#
1j#
1}#
12$
1V
1i
1|
11"
1D"
b1100 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#1300
0#
#1350
1#
#1360
b0 !
b0 ,
0]"
0\"
1"
1c"
1d"
1`"
1a"
1;
1:
02
1_"
0<
1>
04
03
0F
0l"
0!#
04#
0G#
0Z#
0m#
0"$
05$
0Y
0l
0!"
04"
0G"
1.
18
1?
1K
1R
1^
1e
1q
1x
1&"
1-"
19"
1@"
1L"
1S"
1^"
1e"
1q"
1x"
1&#
1-#
19#
1@#
1L#
1S#
1_#
1f#
1r#
1y#
1'$
1.$
1:$
1A$
0/
00
0C
0i"
0|"
01#
0D#
0W#
0j#
0}#
02$
0V
0i
0|
01"
0D"
b1101 (
b11 &
b11 +
b11 1
b11 D
b11 W
b11 j
b11 }
b11 2"
b11 E"
b11 X"
b11 j"
b11 }"
b11 2#
b11 E#
b11 X#
b11 k#
b11 ~#
b11 3$
b0 $
b0 )
b0 %
b0 *
#1400
0#
#1450
1#
#1460
0t"
0s"
0<#
0;#
0b#
0a#
0=$
0<$
0t
0s
0<"
0;"
0a"
0`"
1I
0g"
1$#
0/#
1J#
0U#
1p#
0{#
0%$
00$
1\
0g
1$"
0/"
1J"
0U"
16
0o"
07#
0]#
08$
0o
07"
b101010010101011 !
b101010010101011 ,
0]"
1H
0J
0P
1##
0%#
0+#
1I#
0K#
0Q#
1o#
0q#
0w#
0$$
0&$
0,$
1[
0]
0c
1#"
0%"
0+"
1I"
b101010100101010 -
0K"
0Q"
15
12
0n"
1k"
06#
13#
0\#
1Y#
07$
14$
0n
1k
06"
13"
0\"
1Y"
0Q
0M
0N
1E
0,#
0(#
0)#
1~"
0R#
0N#
0O#
1F#
0x#
0t#
0u#
1l#
0-$
0)$
0*$
1!$
0d
0`
0a
1X
0,"
0("
0)"
1~
0R"
0N"
0O"
1F"
1<
0>
13
1u"
0w"
1l"
1=#
0?#
14#
1c#
0e#
1Z#
1>$
0@$
15$
1u
0w
1l
1="
0?"
14"
1b"
0d"
1Z"
0L
1F
0'#
1!#
0M#
1G#
0s#
1m#
0($
1"$
0_
1Y
0'"
1!"
0M"
1G"
1/
1h"
10#
1V#
11$
1h
10"
1V"
1C
1|"
1D#
1j#
1}#
1V
1|
1D"
b1110 (
b1010101001010101 $
b1010101001010101 )
b101010110101010 %
b101010110101010 *
#1500
0#
#1550
1#
#1560
18$
0I
1o"
17#
1]#
1%$
1o
17"
1]"
1=$
1<$
17$
0H
1t"
1s"
1n"
1<#
1;#
16#
1b#
1a#
1\#
1*$
1)$
1$$
1t
1s
1n
1<"
1;"
16"
1a"
1`"
1\"
10$
b1111111111111100 !
b1111111111111100 ,
06
0A
1g"
1/#
1U#
1{#
1g
1/"
1U"
1&$
05
07
0=
1J
1%#
1K#
1q#
1]
1%"
b11111111111111 -
1K"
1P
1+#
1Q#
1w#
1,$
1c
1+"
1Q"
1>
0:
0;
0<
0M
0N
1(#
1)#
1N#
1O#
1t#
1u#
1`
1a
1("
1)"
1N"
1O"
1O
1*#
1P#
1v#
1+$
1b
1*"
1P"
09
14
1L
1'#
1M#
1s#
1($
1_
1'"
1M"
1B
1{"
1C#
1i#
1|#
1U
1{
1C"
10
0C
0|"
0D#
0j#
0}#
0V
0|
0D"
b1111 (
b1111111111111111 $
b1111111111111111 )
b1 %
b1 *
#1600
0#
#1650
1#
#1660
0"
0o"
0$#
07#
0J#
0]#
0p#
0%$
08$
0\
0o
0$"
07"
0J"
0c"
0n"
0##
06#
0I#
0\#
0o#
0$$
07$
0[
0n
0#"
06"
0I"
0a"
0`"
0g"
0z"
0/#
0B#
0U#
0h#
0{#
00$
0T
0g
0z
0/"
0B"
0U"
0J
b1000000000000000 !
b1000000000000000 ,
1]"
0p"
0%#
08#
0K#
0^#
0q#
0&$
09$
0]
0p
0%"
08"
b0 -
0K"
0P
0v"
0+#
0>#
0Q#
0d#
0w#
0,$
0?$
0c
0v
0+"
0>"
0Q"
1\"
0Y"
0s"
0t"
0(#
0)#
0;#
0<#
0N#
0O#
0a#
0b#
0t#
0u#
0)$
0*$
0<$
0=$
0`
0a
0s
0t
0("
0)"
0;"
0<"
0N"
0O"
0O
0u"
0*#
0=#
0P#
0c#
0v#
0+$
0>$
0b
0u
0*"
0="
0P"
0b"
1d"
0Z"
0L
0r"
0'#
0:#
0M#
0`#
0s#
0($
0;$
0_
0r
0'"
0:"
0M"
0B
0h"
0{"
00#
0C#
0V#
0i#
0|#
01$
0U
0h
0{
00"
0C"
0V"
1C
1i"
1|"
11#
1D#
1W#
1j#
1}#
12$
1V
1i
1|
11"
1D"
b10000 (
b1 $
b1 )
b111111111111111 %
b111111111111111 *
#1700
0#
#1750
1#
#1800
0#
#1850
1#
#1900
0#
#1950
1#
#2000
0#
#2050
1#
#2100
0#
#2150
1#
#2200
0#
#2250
1#
#2300
0#
#2350
1#
#2400
0#
#2450
1#
#2500
0#
#2550
1#
#2600
0#
#2650
1#
#2660
